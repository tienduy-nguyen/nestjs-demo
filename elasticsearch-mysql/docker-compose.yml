version: '3.8'

services:
  es-mysql-nestjs:
    build: 
      context: .
      dockerfile: Dockerfile
    image: nest-es-demo-docker
    container_name: es-nestjs-service
    restart: always

    ports:
       - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mysqldb
    networks:
      - nest-demo-network
    
  # Database service
  mysqldb:
    image: mysql:5.7
    container_name: mysql-service
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - nest-demo-network

  # elastich search service
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - http.port=9200
  #     - http.host=0.0.0.0
  #     - transport.host=127.0.0.1
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=elasticsearch
  #     - cluster.initial_master_nodes=elasticsearch
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es_data:/var/lib/elasticsearch
  #   ports:
  #     - "${ELASTIC_SEARCH_PORT}:${ELASTIC_SEARCH_PORT}"
  #   networks:
  #     - nest-demo-network

      #Docker Networks
networks:
  # All container connect in a network
  nest-demo-network:
    driver: bridge
# save (persist) data
volumes:
  mysql_data:
    name: mysql_data
  # es_data: {}