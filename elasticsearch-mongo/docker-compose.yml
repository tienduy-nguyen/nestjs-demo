version: '3.8'

services:
  demoapp:
    depends_on:
      - mongodb
    build: 
      context: .
      dockerfile: Dockerfile
    # imagename
    image: nest-demo-docker
    container_name: demoapp
    restart: always

    #docker run -t is allow
    tty: true

    ports:
       - "${SERVER_PORT}:${SERVER_PORT}"
    
    working_dir: /var/www/elasticsearch-mongo
    environment:
      SERVICE_NAME: demoapp
      SERVICE_TAGS: dev
      SERVICE_DB_HOST: ${DATABASE_HOST}:${DATABASE_PORT}
      SERVICE_DB_USER: ${DATABASE_USERNAME}
      SERVICE_DB_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_ES_HOST: ${ELASTIC_SEARCH_HOST}:${ELASTIC_SEARCH_PORT}
      ELASTICSEARCH_URL: ${ELASTIC_SEARCH_URL}
    
    volumes:
      - .:/var/www/elasticsearch-mongo
      - /var/www/elasticsearch-mongo
    networks:
      - nest-demo-docker
    
  # Database service
  mongodb:
    image: mongo
    container_name: nestmongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_DATABASE: ${DATABASE_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - db_data:/data/db
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    networks:
      - nest-demo-network

  # elastich search service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - http.port=9200
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/var/lib/elasticsearch
    ports:
      - "${ELASTIC_SEARCH_PORT}:${ELASTIC_SEARCH_PORT}"
    networks:
      - nest-demo-network

      #Docker Networks
networks:
  # All container connect in a network
  nest-demo-network:
    driver: bridge
# save (persist) data
volumes:
  db_data: {}
  es_data: {}